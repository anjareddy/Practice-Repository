// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Practice.CityInfo.API.DBContext;

#nullable disable

namespace Practice.CityInfo.API.Migrations
{
    [DbContext(typeof(CityInfoDbContext))]
    [Migration("20230729030835_data-seeding")]
    partial class dataseeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Practice.CityInfo.API.Entities.CityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "One of big cities in US",
                            Name = "Newyork"
                        },
                        new
                        {
                            Id = 2,
                            Description = "It has a public university",
                            Name = "Newyork"
                        },
                        new
                        {
                            Id = 3,
                            Description = "It has a public university on Ohio",
                            Name = "Cleveland"
                        });
                });

            modelBuilder.Entity("Practice.CityInfo.API.Entities.PointsOfInterestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Twin Towers Description",
                            Name = "Twin Towers"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "Edge Point Description",
                            Name = "Edge Point"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "Downtown Description",
                            Name = "Downtown"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "University Campus Description",
                            Name = "University Campus"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "Heli Towers Description",
                            Name = "Heli Towers"
                        });
                });

            modelBuilder.Entity("Practice.CityInfo.API.Entities.PointsOfInterestEntity", b =>
                {
                    b.HasOne("Practice.CityInfo.API.Entities.CityEntity", "city")
                        .WithMany("PointsOfInterests")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("Practice.CityInfo.API.Entities.CityEntity", b =>
                {
                    b.Navigation("PointsOfInterests");
                });
#pragma warning restore 612, 618
        }
    }
}
